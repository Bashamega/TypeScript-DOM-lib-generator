{
  "callbackFunctions": {
    "callbackFunction": {
      "AudioWorkletProcessorConstructor": {
        "overrideSignatures": [
          "new (options: any): AudioWorkletProcessorImpl"
        ]
      },
      "CustomElementConstructor": {
        "overrideSignatures": [
          "new (...params: any[]): HTMLElement"
        ]
      },
      "LockGrantedCallback": {
        "signature": {
          "0": {
            "overrideType": "T"
          }
        },
        "typeParameters": [
          {
            "name": "T"
          }
        ]
      },
      "OnErrorEventHandlerNonNull": {
        "signature": {
          "0": {
            "param": [
              {
                "name": "error",
                "overrideType": "Error"
              }
            ]
          }
        }
      },
      "QueuingStrategySize": {
        "signature": {
          "0": {
            "param": [
              {
                "name": "chunk",
                "overrideType": "T"
              }
            ]
          }
        },
        "typeParameters": [
          {
            "name": "T",
            "default": "any"
          }
        ]
      },
      "TransformerFlushCallback": {
        "signature": {
          "0": {
            "param": [
              {
                "name": "controller",
                "overrideType": "TransformStreamDefaultController<O>"
              }
            ]
          }
        },
        "typeParameters": [
          {
            "name": "O"
          }
        ]
      },
      "TransformerStartCallback": {
        "signature": {
          "0": {
            "param": [
              {
                "name": "controller",
                "overrideType": "TransformStreamDefaultController<O>"
              }
            ]
          }
        },
        "typeParameters": [
          {
            "name": "O"
          }
        ]
      },
      "TransformerTransformCallback": {
        "signature": {
          "0": {
            "param": [
              {
                "name": "chunk",
                "overrideType": "I"
              },
              {
                "name": "controller",
                "overrideType": "TransformStreamDefaultController<O>"
              }
            ]
          }
        },
        "typeParameters": [
          {
            "name": "I"
          },
          {
            "name": "O"
          }
        ]
      },
      "UnderlyingSinkWriteCallback": {
        "signature": {
          "0": {
            "param": [
              {
                "name": "chunk",
                "overrideType": "W"
              }
            ]
          }
        },
        "typeParameters": [
          {
            "name": "W"
          }
        ]
      },
      "UnderlyingSourcePullCallback": {
        "signature": {
          "0": {
            "param": [
              {
                "name": "controller",
                "overrideType": "ReadableStreamController<R>"
              }
            ]
          }
        },
        "typeParameters": [
          {
            "name": "R"
          }
        ]
      },
      "UnderlyingSourceStartCallback": {
        "signature": {
          "0": {
            "param": [
              {
                "name": "controller",
                "overrideType": "ReadableStreamController<R>"
              }
            ]
          }
        },
        "typeParameters": [
          {
            "name": "R"
          }
        ]
      }
    }
  },
  "callbackInterfaces": {
    "interface": {}
  },
  "dictionaries": {
    "dictionary": {
      "AuthenticatorSelectionCriteria": {
        "members": {
          "member": {
            "authenticatorAttachment": {
              "type": "AuthenticatorAttachment"
            },
            "residentKey": {
              "type": "ResidentKeyRequirement"
            },
            "userVerification": {
              "type": "UserVerificationRequirement"
            }
          }
        }
      },
      "BaseComputedKeyframe": {
        "members": {
          "member": {
            "composite": {
              "required": true
            },
            "computedOffset": {
              "required": true
            },
            "easing": {
              "required": true
            },
            "offset": {
              "required": true
            }
          }
        },
        "name": "ComputedKeyframe",
        "overrideIndexSignatures": [
          "[property: string]: string | number | null | undefined"
        ]
      },
      "BaseKeyframe": {
        "name": "Keyframe",
        "overrideIndexSignatures": [
          "[property: string]: string | number | null | undefined"
        ]
      },
      "BasePropertyIndexedKeyframe": {
        "name": "PropertyIndexedKeyframes",
        "overrideIndexSignatures": [
          "[property: string]: string | string[] | number | null | (number | null)[] | undefined"
        ]
      },
      "ClientQueryOptions": {
        "members": {
          "member": {
            "type": {
              "name": "type",
              "overrideType": "ClientTypes"
            }
          }
        }
      },
      "CryptoKeyPair": {
        "members": {
          "member": {
            "privateKey": {
              "required": true
            },
            "publicKey": {
              "required": true
            }
          }
        }
      },
      "CustomEventInit": {
        "members": {
          "member": {
            "detail": {
              "name": "detail",
              "overrideType": "T"
            }
          }
        },
        "typeParameters": [
          {
            "name": "T",
            "default": "any"
          }
        ]
      },
      "FontFaceDescriptors": {
        "members": {
          "member": {
            "display": {
              "type": "FontDisplay"
            }
          }
        }
      },
      "GlobalDescriptor": {
        "legacyNamespace": "WebAssembly",
        "members": {
          "member": {
            "value": {
              "overrideType": "T"
            }
          }
        },
        "typeParameters": [
          {
            "name": "T",
            "extends": "ValueType",
            "default": "ValueType"
          }
        ]
      },
      "MemoryDescriptor": {
        "legacyNamespace": "WebAssembly"
      },
      "MessageEventInit": {
        "members": {
          "member": {
            "data": {
              "name": "data",
              "overrideType": "T"
            }
          }
        },
        "typeParameters": [
          {
            "name": "T",
            "default": "any"
          }
        ]
      },
      "ModuleExportDescriptor": {
        "legacyNamespace": "WebAssembly"
      },
      "ModuleImportDescriptor": {
        "legacyNamespace": "WebAssembly"
      },
      "PermissionDescriptor": {
        "members": {
          "member": {
            "name": {
              "type": "PermissionName"
            }
          }
        }
      },
      "PromiseRejectionEventInit": {
        "members": {
          "member": {
            "promise": {
              "overrideType": "Promise<any>"
            }
          }
        }
      },
      "PublicKeyCredentialCreationOptions": {
        "members": {
          "member": {
            "attestation": {
              "type": "AttestationConveyancePreference"
            }
          }
        }
      },
      "PublicKeyCredentialDescriptor": {
        "members": {
          "member": {
            "transports": {
              "subtype": {
                "type": "AuthenticatorTransport"
              }
            },
            "type": {
              "type": "PublicKeyCredentialType"
            }
          }
        }
      },
      "PublicKeyCredentialParameters": {
        "members": {
          "member": {
            "type": {
              "type": "PublicKeyCredentialType"
            }
          }
        }
      },
      "PublicKeyCredentialRequestOptions": {
        "members": {
          "member": {
            "userVerification": {
              "type": "UserVerificationRequirement"
            }
          }
        }
      },
      "QueuingStrategy": {
        "members": {
          "member": {
            "size": {
              "overrideType": "QueuingStrategySize<T>"
            }
          }
        },
        "typeParameters": [
          {
            "name": "T",
            "default": "any"
          }
        ]
      },
      "ReadableWritablePair": {
        "members": {
          "member": {
            "readable": {
              "overrideType": "ReadableStream<R>"
            },
            "writable": {
              "overrideType": "WritableStream<W>"
            }
          }
        },
        "typeParameters": [
          {
            "name": "R",
            "default": "any"
          },
          {
            "name": "W",
            "default": "any"
          }
        ]
      },
      "RequestInit": {
        "members": {
          "member": {
            "window": {
              "overrideType": "null"
            }
          }
        }
      },
      "StructuredSerializeOptions": {
        "members": {
          "member": {
            "transfer": {
              "overrideType": "Transferable[]"
            }
          }
        }
      },
      "TableDescriptor": {
        "legacyNamespace": "WebAssembly"
      },
      "TextEncoderEncodeIntoResult": {
        "members": {
          "member": {
            "read": {
              "required": true
            },
            "written": {
              "required": true
            }
          }
        }
      },
      "TokenBinding": {
        "members": {
          "member": {
            "status": {
              "type": "TokenBindingStatus"
            }
          }
        }
      },
      "Transformer": {
        "members": {
          "member": {
            "flush": {
              "overrideType": "TransformerFlushCallback<O>"
            },
            "readableType": {
              "overrideType": "undefined"
            },
            "start": {
              "overrideType": "TransformerStartCallback<O>"
            },
            "transform": {
              "overrideType": "TransformerTransformCallback<I, O>"
            },
            "writableType": {
              "overrideType": "undefined"
            }
          }
        },
        "typeParameters": [
          {
            "name": "I",
            "default": "any"
          },
          {
            "name": "O",
            "default": "any"
          }
        ]
      },
      "UIEventInit": {
        "members": {
          "member": {
            "which": {
              "deprecated": true
            }
          }
        }
      },
      "UnderlyingSink": {
        "members": {
          "member": {
            "type": {
              "overrideType": "undefined"
            },
            "write": {
              "overrideType": "UnderlyingSinkWriteCallback<W>"
            }
          }
        },
        "typeParameters": [
          {
            "name": "W",
            "default": "any"
          }
        ]
      },
      "UnderlyingSource": {
        "members": {
          "member": {
            "pull": {
              "overrideType": "UnderlyingSourcePullCallback<R>"
            },
            "start": {
              "overrideType": "UnderlyingSourceStartCallback<R>"
            }
          }
        },
        "typeParameters": [
          {
            "name": "R",
            "default": "any"
          }
        ]
      },
      "WebAssemblyInstantiatedSource": {
        "legacyNamespace": "WebAssembly"
      }
    }
  },
  "enums": {
    "enum": {
      "ImageOrientation": {
        "value": [
          "none"
        ]
      },
      "ImportExportKind": {
        "legacyNamespace": "WebAssembly"
      },
      "TableKind": {
        "legacyNamespace": "WebAssembly"
      }
    }
  },
  "interfaces": {
    "interface": {
      "Animation": {
        "events": {
          "event": [
            {
              "name": "finish",
              "type": "AnimationPlaybackEvent"
            },
            {
              "name": "cancel",
              "type": "AnimationPlaybackEvent"
            }
          ]
        }
      },
      "BeforeUnloadEvent": {
        "properties": {
          "property": {
            "returnValue": {
              "name": "returnValue",
              "overrideType": "any"
            }
          }
        }
      },
      "Blob": {
        "methods": {
          "method": {
            "stream": {
              "signature": {
                "0": {
                  "overrideType": "ReadableStream<Uint8Array>"
                }
              }
            }
          }
        }
      },
      "ByteLengthQueuingStrategy": {
        "extends": "QueuingStrategy<ArrayBufferView>",
        "properties": {
          "property": {
            "size": {
              "name": "size",
              "overrideType": [
                "QueuingStrategySize<ArrayBufferView>"
              ]
            }
          }
        }
      },
      "CSSFontFaceRule": {
        "properties": {
          "property": {
            "style": {
              "type": "CSSStyleDeclaration"
            }
          }
        }
      },
      "CSSKeyframeRule": {
        "properties": {
          "property": {
            "style": {
              "type": "CSSStyleDeclaration"
            }
          }
        }
      },
      "CSSNestedDeclarations": {
        "properties": {
          "property": {
            "style": {
              "type": "CSSStyleDeclaration"
            }
          }
        }
      },
      "CSSPageRule": {
        "properties": {
          "property": {
            "style": {
              "type": "CSSStyleDeclaration"
            }
          }
        }
      },
      "CSSStyleDeclaration": {
        "properties": {
          "property": {
            "cssFloat": {
              "mdnUrl": "https://developer.mozilla.org/docs/Web/API/CSSStyleDeclaration/cssFloat",
              "name": "cssFloat",
              "type": "CSSOMString"
            },
            "webkitLineClamp": {
              "deprecated": false
            }
          }
        }
      },
      "CSSStyleRule": {
        "properties": {
          "property": {
            "style": {
              "type": "CSSStyleDeclaration"
            }
          }
        }
      },
      "Cache": {
        "methods": {
          "method": {
            "match": {
              "name": "match",
              "signature": {
                "0": {
                  "overrideType": "Promise<Response | undefined>"
                }
              }
            }
          }
        }
      },
      "CacheStorage": {
        "methods": {
          "method": {
            "match": {
              "name": "match",
              "signature": {
                "0": {
                  "overrideType": "Promise<Response | undefined>"
                }
              }
            }
          }
        }
      },
      "Client": {
        "methods": {
          "method": {
            "postMessage": {
              "signature": {
                "0": {
                  "param": [
                    {
                      "name": "transfer",
                      "overrideType": "Transferable[]"
                    }
                  ]
                }
              }
            }
          }
        },
        "properties": {
          "property": {
            "type": {
              "name": "type",
              "overrideType": "ClientTypes"
            }
          }
        }
      },
      "Clients": {
        "methods": {
          "method": {
            "get": {
              "signature": {
                "0": {
                  "overrideType": "Promise<Client | undefined>"
                }
              }
            },
            "matchAll": {
              "signature": {
                "0": {
                  "overrideType": "Promise<ReadonlyArray<T[\"type\"] extends \"window\" ? WindowClient : Client>>",
                  "param": [
                    {
                      "name": "options",
                      "overrideType": "T"
                    }
                  ],
                  "typeParameters": [
                    {
                      "name": "T",
                      "extends": "ClientQueryOptions"
                    }
                  ]
                }
              }
            }
          }
        }
      },
      "CompressionStream": {
        "properties": {
          "property": {
            "readable": {
              "name": "readable",
              "overrideType": "ReadableStream<Uint8Array>",
              "readonly": true
            },
            "writable": {
              "name": "writable",
              "overrideType": "WritableStream<BufferSource>",
              "readonly": true
            }
          }
        }
      },
      "ContactAddress": {
        "name": "PaymentAddress"
      },
      "CountQueuingStrategy": {
        "extends": "QueuingStrategy",
        "properties": {
          "property": {
            "size": {
              "name": "size",
              "overrideType": [
                "QueuingStrategySize"
              ]
            }
          }
        }
      },
      "Crypto": {
        "methods": {
          "method": {
            "getRandomValues": {
              "signature": {
                "0": {
                  "overrideType": "T",
                  "param": [
                    {
                      "name": "array",
                      "overrideType": "T"
                    }
                  ],
                  "typeParameters": [
                    {
                      "name": "T",
                      "extends": "ArrayBufferView | null"
                    }
                  ]
                }
              }
            },
            "randomUUID": {
              "signature": {
                "0": {
                  "overrideType": "`${string}-${string}-${string}-${string}-${string}`"
                }
              }
            }
          }
        }
      },
      "CryptoKey": {
        "properties": {
          "property": {
            "algorithm": {
              "type": "KeyAlgorithm"
            },
            "usages": {
              "subtype": {
                "type": "KeyUsage"
              },
              "type": "sequence"
            }
          }
        }
      },
      "CustomEvent": {
        "constructor": {
          "signature": {
            "0": {
              "overrideType": "CustomEvent<T>",
              "param": [
                {
                  "name": "eventInitDict",
                  "overrideType": "CustomEventInit<T>"
                }
              ],
              "typeParameters": [
                {
                  "name": "T"
                }
              ]
            }
          }
        },
        "methods": {
          "method": {
            "initCustomEvent": {
              "signature": {
                "0": {
                  "param": [
                    {
                      "name": "detail",
                      "overrideType": "T"
                    }
                  ]
                }
              }
            }
          }
        },
        "properties": {
          "property": {
            "detail": {
              "overrideType": "T"
            }
          }
        },
        "typeParameters": [
          {
            "name": "T",
            "default": "any"
          }
        ]
      },
      "DOMException": {
        "extends": "Error"
      },
      "DOMImplementation": {
        "methods": {
          "method": {
            "hasFeature": {
              "overrideSignatures": [
                "hasFeature(...args: any[]): true"
              ]
            }
          }
        }
      },
      "DOMStringMap": {
        "overrideIndexSignatures": [
          "[name: string]: string | undefined"
        ]
      },
      "DataTransfer": {
        "properties": {
          "property": {
            "dropEffect": {
              "name": "dropEffect",
              "overrideType": "\"none\" | \"copy\" | \"link\" | \"move\""
            },
            "effectAllowed": {
              "name": "effectAllowed",
              "overrideType": "\"none\" | \"copy\" | \"copyLink\" | \"copyMove\" | \"link\" | \"linkMove\" | \"move\" | \"all\" | \"uninitialized\""
            }
          }
        }
      },
      "DecompressionStream": {
        "properties": {
          "property": {
            "readable": {
              "name": "readable",
              "overrideType": "ReadableStream<Uint8Array>",
              "readonly": true
            },
            "writable": {
              "name": "writable",
              "overrideType": "WritableStream<BufferSource>",
              "readonly": true
            }
          }
        }
      },
      "DedicatedWorkerGlobalScope": {
        "events": {
          "event": [
            {
              "name": "message",
              "type": "MessageEvent"
            },
            {
              "name": "messageerror",
              "type": "MessageEvent"
            }
          ]
        },
        "methods": {
          "method": {
            "postMessage": {
              "signature": {
                "0": {
                  "param": [
                    {
                      "name": "transfer",
                      "overrideType": "Transferable[]"
                    }
                  ]
                }
              }
            }
          }
        }
      },
      "Document": {
        "methods": {
          "method": {
            "adoptNode": {
              "signature": {
                "0": {
                  "overrideType": "T",
                  "param": [
                    {
                      "name": "node",
                      "overrideType": "T"
                    }
                  ],
                  "typeParameters": [
                    {
                      "name": "T",
                      "extends": "Node"
                    }
                  ]
                }
              }
            },
            "getElementById": {
              "name": "getElementById",
              "overrideSignatures": [
                "getElementById(elementId: string): HTMLElement | null"
              ]
            },
            "getElementsByClassName": {
              "name": "getElementsByClassName",
              "signature": {
                "0": {
                  "overrideType": "HTMLCollectionOf<Element>"
                }
              }
            },
            "getElementsByName": {
              "name": "getElementsByName",
              "signature": {
                "0": {
                  "overrideType": "NodeListOf<HTMLElement>"
                }
              }
            },
            "getElementsByTagNameNS": {
              "additionalSignatures": [
                "getElementsByTagNameNS(namespaceURI: \"http://www.w3.org/1999/xhtml\", localName: string): HTMLCollectionOf<HTMLElement>",
                "getElementsByTagNameNS(namespaceURI: \"http://www.w3.org/2000/svg\", localName: string): HTMLCollectionOf<SVGElement>",
                "getElementsByTagNameNS(namespaceURI: \"http://www.w3.org/1998/Math/MathML\", localName: string): HTMLCollectionOf<MathMLElement>"
              ],
              "name": "getElementsByTagNameNS",
              "signature": {
                "0": {
                  "overrideType": "HTMLCollectionOf<Element>"
                }
              }
            },
            "importNode": {
              "signature": {
                "0": {
                  "overrideType": "T",
                  "param": [
                    {
                      "name": "node",
                      "overrideType": "T"
                    }
                  ],
                  "typeParameters": [
                    {
                      "name": "T",
                      "extends": "Node"
                    }
                  ]
                }
              }
            }
          }
        },
        "properties": {
          "property": {
            "anchors": {
              "name": "anchors",
              "overrideType": "HTMLCollectionOf<HTMLAnchorElement>"
            },
            "body": {
              "nullable": false
            },
            "defaultView": {
              "name": "defaultView",
              "overrideType": "WindowProxy & typeof globalThis"
            },
            "documentElement": {
              "name": "documentElement",
              "nullable": false,
              "overrideType": "HTMLElement"
            },
            "embeds": {
              "name": "embeds",
              "overrideType": "HTMLCollectionOf<HTMLEmbedElement>"
            },
            "forms": {
              "name": "forms",
              "overrideType": "HTMLCollectionOf<HTMLFormElement>"
            },
            "head": {
              "nullable": false
            },
            "images": {
              "name": "images",
              "overrideType": "HTMLCollectionOf<HTMLImageElement>"
            },
            "links": {
              "name": "links",
              "overrideType": "HTMLCollectionOf<HTMLAnchorElement | HTMLAreaElement>"
            },
            "location": {
              "nullable": false,
              "readonly": false
            },
            "plugins": {
              "name": "plugins",
              "overrideType": "HTMLCollectionOf<HTMLEmbedElement>"
            },
            "scripts": {
              "name": "scripts",
              "overrideType": "HTMLCollectionOf<HTMLScriptElement>"
            }
          }
        }
      },
      "DocumentFragment": {
        "methods": {
          "method": {
            "getElementById": {
              "name": "getElementById",
              "overrideSignatures": [
                "getElementById(elementId: string): HTMLElement | null"
              ]
            }
          }
        },
        "properties": {
          "property": {
            "ownerDocument": {
              "name": "ownerDocument",
              "readonly": 1,
              "type": "Document"
            }
          }
        }
      },
      "Element": {
        "methods": {
          "method": {
            "getElementsByTagNameNS": {
              "additionalSignatures": [
                "getElementsByTagNameNS(namespaceURI: \"http://www.w3.org/1999/xhtml\", localName: string): HTMLCollectionOf<HTMLElement>",
                "getElementsByTagNameNS(namespaceURI: \"http://www.w3.org/2000/svg\", localName: string): HTMLCollectionOf<SVGElement>",
                "getElementsByTagNameNS(namespaceURI: \"http://www.w3.org/1998/Math/MathML\", localName: string): HTMLCollectionOf<MathMLElement>"
              ],
              "name": "getElementsByTagNameNS",
              "signature": {
                "0": {
                  "overrideType": "HTMLCollectionOf<Element>"
                }
              }
            }
          }
        }
      },
      "EventTarget": {
        "methods": {
          "method": {
            "addEventListener": {
              "signature": {
                "0": {
                  "param": [
                    {
                      "name": "callback",
                      "overrideType": "EventListenerOrEventListenerObject"
                    }
                  ]
                }
              }
            },
            "removeEventListener": {
              "signature": {
                "0": {
                  "param": [
                    {
                      "name": "callback",
                      "overrideType": "EventListenerOrEventListenerObject"
                    }
                  ]
                }
              }
            }
          }
        }
      },
      "ExtendableEvent": {
        "methods": {
          "method": {
            "waitUntil": {
              "signature": {
                "0": {
                  "param": [
                    {
                      "name": "f",
                      "overrideType": "Promise<any>"
                    }
                  ]
                }
              }
            }
          }
        }
      },
      "FileReader": {
        "events": {
          "event": [
            {
              "name": "loadstart",
              "type": "ProgressEvent"
            },
            {
              "name": "progress",
              "type": "ProgressEvent"
            },
            {
              "name": "load",
              "type": "ProgressEvent"
            },
            {
              "name": "abort",
              "type": "ProgressEvent"
            },
            {
              "name": "error",
              "type": "ProgressEvent"
            },
            {
              "name": "loadend",
              "type": "ProgressEvent"
            }
          ]
        },
        "properties": {
          "property": {
            "readyState": {
              "name": "readyState",
              "overrideType": "typeof FileReader.EMPTY | typeof FileReader.LOADING | typeof FileReader.DONE"
            }
          }
        }
      },
      "FileSystemDirectoryHandle": {
        "iterator": {
          "exposed": "Window Worker"
        }
      },
      "FontFace": {
        "properties": {
          "property": {
            "display": {
              "type": "FontDisplay"
            }
          }
        }
      },
      "FormData": {
        "methods": {
          "method": {
            "append": {
              "additionalSignatures": [
                "append(name: string, value: string | Blob): void"
              ],
              "flavor": "Web",
              "name": "append"
            },
            "set": {
              "additionalSignatures": [
                "set(name: string, value: string | Blob): void"
              ],
              "flavor": "Web",
              "name": "set"
            }
          }
        }
      },
      "GPUError": {
        "exposed": "Window Worker",
        "noInterfaceObject": true,
        "properties": {
          "property": {
            "message": {
              "exposed": "Window Worker"
            }
          }
        }
      },
      "GPUPipelineError": {
        "constructor": {
          "signature": {
            "0": {
              "param": [
                {
                  "name": "message",
                  "optional": false
                }
              ]
            }
          }
        }
      },
      "Global": {
        "constructor": {
          "overrideSignatures": [
            "new<T extends ValueType = ValueType>(descriptor: GlobalDescriptor<T>, v?: ValueTypeMap[T]): Global<T>"
          ]
        },
        "methods": {
          "method": {
            "valueOf": {
              "overrideSignatures": [
                "valueOf(): ValueTypeMap[T]"
              ]
            }
          }
        },
        "name": "Global",
        "properties": {
          "property": {
            "value": {
              "overrideType": "ValueTypeMap[T]"
            }
          }
        },
        "typeParameters": [
          {
            "name": "T",
            "extends": "ValueType",
            "default": "ValueType"
          }
        ]
      },
      "HTMLButtonElement": {
        "properties": {
          "property": {
            "labels": {
              "name": "labels",
              "overrideType": "NodeListOf<HTMLLabelElement>"
            },
            "type": {
              "overrideType": "\"submit\" | \"reset\" | \"button\""
            }
          }
        }
      },
      "HTMLCanvasElement": {
        "methods": {
          "method": {
            "getContext": {
              "additionalSignatures": [
                "getContext(contextId: \"2d\", options?: CanvasRenderingContext2DSettings): CanvasRenderingContext2D | null",
                "getContext(contextId: \"bitmaprenderer\", options?: ImageBitmapRenderingContextSettings): ImageBitmapRenderingContext | null",
                "getContext(contextId: \"webgl\", options?: WebGLContextAttributes): WebGLRenderingContext | null",
                "getContext(contextId: \"webgl2\", options?: WebGLContextAttributes): WebGL2RenderingContext | null"
              ]
            },
            "toBlob": {
              "name": "toBlob",
              "signature": {
                "0": {
                  "param": [
                    {
                      "name": "quality",
                      "overrideType": "number"
                    }
                  ]
                }
              }
            },
            "toDataURL": {
              "name": "toDataURL",
              "signature": {
                "0": {
                  "param": [
                    {
                      "name": "quality",
                      "overrideType": "number"
                    }
                  ]
                }
              }
            }
          }
        }
      },
      "HTMLDataListElement": {
        "properties": {
          "property": {
            "options": {
              "name": "options",
              "overrideType": "HTMLCollectionOf<HTMLOptionElement>"
            }
          }
        }
      },
      "HTMLDirectoryElement": {
        "element": [
          {
            "name": "dir"
          }
        ]
      },
      "HTMLElement": {
        "methods": {
          "method": {
            "togglePopover": {
              "signature": {
                "0": {
                  "param": [
                    {
                      "name": "options",
                      "type": "boolean"
                    }
                  ]
                }
              }
            }
          }
        },
        "properties": {
          "property": {
            "hidden": {
              "nullable": false,
              "overrideType": "boolean"
            }
          }
        }
      },
      "HTMLFontElement": {
        "element": [
          {
            "name": "font"
          }
        ]
      },
      "HTMLFormElement": {
        "overrideIndexSignatures": [
          "[index: number]: Element",
          "[name: string]: any"
        ],
        "properties": {
          "property": {
            "autocomplete": {
              "name": "autocomplete",
              "overrideType": "AutoFillBase"
            }
          }
        }
      },
      "HTMLFrameElement": {
        "element": [
          {
            "name": "frame"
          }
        ]
      },
      "HTMLFrameSetElement": {
        "element": [
          {
            "name": "frameset"
          }
        ]
      },
      "HTMLImageElement": {
        "properties": {
          "property": {
            "fetchPriority": {
              "overrideType": "\"high\" | \"low\" | \"auto\""
            }
          }
        }
      },
      "HTMLInputElement": {
        "methods": {
          "method": {
            "setSelectionRange": {
              "signature": {
                "0": {
                  "param": [
                    {
                      "name": "start",
                      "nullable": true
                    },
                    {
                      "name": "end",
                      "nullable": true
                    },
                    {
                      "name": "direction",
                      "overrideType": "\"forward\" | \"backward\" | \"none\""
                    }
                  ]
                }
              }
            }
          }
        },
        "properties": {
          "property": {
            "autocomplete": {
              "name": "autocomplete",
              "overrideType": "AutoFill"
            },
            "selectionDirection": {
              "name": "selectionDirection",
              "overrideType": "\"forward\" | \"backward\" | \"none\""
            },
            "valueAsDate": {
              "name": "valueAsDate",
              "overrideType": "Date"
            }
          }
        }
      },
      "HTMLLabelElement": {
        "properties": {
          "property": {
            "form": {
              "name": "form",
              "overrideType": "HTMLFormElement"
            }
          }
        }
      },
      "HTMLLinkElement": {
        "properties": {
          "property": {
            "fetchPriority": {
              "overrideType": "\"high\" | \"low\" | \"auto\""
            }
          }
        }
      },
      "HTMLMarqueeElement": {
        "element": [
          {
            "name": "marquee"
          }
        ]
      },
      "HTMLMediaElement": {
        "properties": {
          "property": {
            "preload": {
              "overrideType": "\"none\" | \"metadata\" | \"auto\" | \"\""
            }
          }
        }
      },
      "HTMLMeterElement": {
        "properties": {
          "property": {
            "labels": {
              "name": "labels",
              "overrideType": "NodeListOf<HTMLLabelElement>"
            }
          }
        }
      },
      "HTMLOptionsCollection": {
        "extends": "HTMLCollectionOf<HTMLOptionElement>"
      },
      "HTMLOutputElement": {
        "properties": {
          "property": {
            "labels": {
              "name": "labels",
              "overrideType": "NodeListOf<HTMLLabelElement>"
            }
          }
        }
      },
      "HTMLProgressElement": {
        "properties": {
          "property": {
            "labels": {
              "name": "labels",
              "overrideType": "NodeListOf<HTMLLabelElement>"
            }
          }
        }
      },
      "HTMLScriptElement": {
        "properties": {
          "property": {
            "fetchPriority": {
              "overrideType": "\"high\" | \"low\" | \"auto\""
            }
          }
        }
      },
      "HTMLSelectElement": {
        "overrideIndexSignatures": [
          "[name: number]: HTMLOptionElement | HTMLOptGroupElement"
        ],
        "properties": {
          "property": {
            "autocomplete": {
              "name": "autocomplete",
              "overrideType": "AutoFill"
            },
            "labels": {
              "name": "labels",
              "overrideType": "NodeListOf<HTMLLabelElement>"
            },
            "selectedOptions": {
              "name": "selectedOptions",
              "overrideType": "HTMLCollectionOf<HTMLOptionElement>"
            },
            "type": {
              "name": "type",
              "overrideType": "\"select-one\" | \"select-multiple\""
            }
          }
        }
      },
      "HTMLTableElement": {
        "properties": {
          "property": {
            "rows": {
              "name": "rows",
              "overrideType": "HTMLCollectionOf<HTMLTableRowElement>"
            },
            "tBodies": {
              "name": "tBodies",
              "overrideType": "HTMLCollectionOf<HTMLTableSectionElement>"
            }
          }
        }
      },
      "HTMLTableRowElement": {
        "properties": {
          "property": {
            "cells": {
              "name": "cells",
              "overrideType": "HTMLCollectionOf<HTMLTableCellElement>"
            }
          }
        }
      },
      "HTMLTableSectionElement": {
        "properties": {
          "property": {
            "rows": {
              "name": "rows",
              "overrideType": "HTMLCollectionOf<HTMLTableRowElement>"
            }
          }
        }
      },
      "HTMLTextAreaElement": {
        "methods": {
          "method": {
            "setSelectionRange": {
              "signature": {
                "0": {
                  "param": [
                    {
                      "name": "start",
                      "nullable": true
                    },
                    {
                      "name": "end",
                      "nullable": true
                    },
                    {
                      "name": "direction",
                      "overrideType": "\"forward\" | \"backward\" | \"none\""
                    }
                  ]
                }
              }
            }
          }
        },
        "properties": {
          "property": {
            "autocomplete": {
              "name": "autocomplete",
              "overrideType": "AutoFill"
            },
            "labels": {
              "name": "labels",
              "overrideType": "NodeListOf<HTMLLabelElement>"
            },
            "selectionDirection": {
              "name": "selectionDirection",
              "overrideType": "\"forward\" | \"backward\" | \"none\""
            }
          }
        }
      },
      "IDBCursor": {
        "methods": {
          "method": {
            "continue": {
              "signature": {
                "0": {
                  "param": [
                    {
                      "name": "key",
                      "overrideType": "IDBValidKey"
                    }
                  ]
                }
              }
            },
            "continuePrimaryKey": {
              "signature": {
                "0": {
                  "param": [
                    {
                      "name": "key",
                      "overrideType": "IDBValidKey"
                    },
                    {
                      "name": "primaryKey",
                      "overrideType": "IDBValidKey"
                    }
                  ]
                }
              }
            },
            "delete": {
              "signature": {
                "0": {
                  "overrideType": "IDBRequest<undefined>"
                }
              }
            },
            "update": {
              "signature": {
                "0": {
                  "overrideType": "IDBRequest<IDBValidKey>"
                }
              }
            }
          }
        },
        "properties": {
          "property": {
            "key": {
              "name": "key",
              "type": "IDBValidKey"
            },
            "primaryKey": {
              "name": "primaryKey",
              "type": "IDBValidKey"
            }
          }
        }
      },
      "IDBIndex": {
        "methods": {
          "method": {
            "count": {
              "name": "count",
              "signature": {
                "0": {
                  "overrideType": "IDBRequest<number>",
                  "param": [
                    {
                      "name": "query",
                      "overrideType": "IDBValidKey | IDBKeyRange"
                    }
                  ]
                }
              }
            },
            "get": {
              "name": "get",
              "signature": {
                "0": {
                  "overrideType": "IDBRequest<any>",
                  "param": [
                    {
                      "name": "query",
                      "overrideType": "IDBValidKey | IDBKeyRange"
                    }
                  ]
                }
              }
            },
            "getAll": {
              "name": "getAll",
              "signature": {
                "0": {
                  "overrideType": "IDBRequest<any[]>",
                  "param": [
                    {
                      "name": "query",
                      "overrideType": "IDBValidKey | IDBKeyRange | null"
                    }
                  ]
                }
              }
            },
            "getAllKeys": {
              "name": "getAllKeys",
              "signature": {
                "0": {
                  "overrideType": "IDBRequest<IDBValidKey[]>",
                  "param": [
                    {
                      "name": "query",
                      "overrideType": "IDBValidKey | IDBKeyRange | null"
                    }
                  ]
                }
              }
            },
            "getKey": {
              "name": "getKey",
              "signature": {
                "0": {
                  "overrideType": "IDBRequest<IDBValidKey | undefined>",
                  "param": [
                    {
                      "name": "query",
                      "overrideType": "IDBValidKey | IDBKeyRange"
                    }
                  ]
                }
              }
            },
            "openCursor": {
              "name": "openCursor",
              "signature": {
                "0": {
                  "overrideType": "IDBRequest<IDBCursorWithValue | null>",
                  "param": [
                    {
                      "name": "query",
                      "overrideType": "IDBValidKey | IDBKeyRange | null"
                    }
                  ]
                }
              }
            },
            "openKeyCursor": {
              "name": "openKeyCursor",
              "signature": {
                "0": {
                  "overrideType": "IDBRequest<IDBCursor | null>",
                  "param": [
                    {
                      "name": "query",
                      "overrideType": "IDBValidKey | IDBKeyRange | null"
                    }
                  ]
                }
              }
            }
          }
        },
        "properties": {
          "property": {
            "keyPath": {
              "name": "keyPath",
              "overrideType": "string | string[]"
            }
          }
        }
      },
      "IDBObjectStore": {
        "methods": {
          "method": {
            "add": {
              "name": "add",
              "signature": {
                "0": {
                  "overrideType": "IDBRequest<IDBValidKey>",
                  "param": [
                    {
                      "name": "key",
                      "overrideType": "IDBValidKey"
                    }
                  ]
                }
              }
            },
            "clear": {
              "name": "clear",
              "signature": {
                "0": {
                  "overrideType": "IDBRequest<undefined>"
                }
              }
            },
            "count": {
              "name": "count",
              "signature": {
                "0": {
                  "overrideType": "IDBRequest<number>",
                  "param": [
                    {
                      "name": "query",
                      "overrideType": "IDBValidKey | IDBKeyRange"
                    }
                  ]
                }
              }
            },
            "delete": {
              "name": "delete",
              "signature": {
                "0": {
                  "overrideType": "IDBRequest<undefined>",
                  "param": [
                    {
                      "name": "query",
                      "overrideType": "IDBValidKey | IDBKeyRange"
                    }
                  ]
                }
              }
            },
            "get": {
              "name": "get",
              "signature": {
                "0": {
                  "overrideType": "IDBRequest<any>",
                  "param": [
                    {
                      "name": "query",
                      "overrideType": "IDBValidKey | IDBKeyRange"
                    }
                  ]
                }
              }
            },
            "getAll": {
              "name": "getAll",
              "signature": {
                "0": {
                  "overrideType": "IDBRequest<any[]>",
                  "param": [
                    {
                      "name": "query",
                      "overrideType": "IDBValidKey | IDBKeyRange | null"
                    }
                  ]
                }
              }
            },
            "getAllKeys": {
              "name": "getAllKeys",
              "signature": {
                "0": {
                  "overrideType": "IDBRequest<IDBValidKey[]>",
                  "param": [
                    {
                      "name": "query",
                      "overrideType": "IDBValidKey | IDBKeyRange | null"
                    }
                  ]
                }
              }
            },
            "getKey": {
              "name": "getKey",
              "signature": {
                "0": {
                  "overrideType": "IDBRequest<IDBValidKey | undefined>",
                  "param": [
                    {
                      "name": "query",
                      "overrideType": "IDBValidKey | IDBKeyRange"
                    }
                  ]
                }
              }
            },
            "openCursor": {
              "name": "openCursor",
              "signature": {
                "0": {
                  "overrideType": "IDBRequest<IDBCursorWithValue | null>",
                  "param": [
                    {
                      "name": "query",
                      "overrideType": "IDBValidKey | IDBKeyRange | null"
                    }
                  ]
                }
              }
            },
            "openKeyCursor": {
              "name": "openKeyCursor",
              "signature": {
                "0": {
                  "overrideType": "IDBRequest<IDBCursor | null>",
                  "param": [
                    {
                      "name": "query",
                      "overrideType": "IDBValidKey | IDBKeyRange | null"
                    }
                  ]
                }
              }
            },
            "put": {
              "name": "put",
              "signature": {
                "0": {
                  "overrideType": "IDBRequest<IDBValidKey>",
                  "param": [
                    {
                      "name": "key",
                      "overrideType": "IDBValidKey"
                    }
                  ]
                }
              }
            }
          }
        },
        "properties": {
          "property": {
            "keyPath": {
              "name": "keyPath",
              "overrideType": "string | string[] | null"
            }
          }
        }
      },
      "IDBRequest": {
        "properties": {
          "property": {
            "result": {
              "name": "result",
              "overrideType": "T"
            },
            "source": {
              "name": "source",
              "nullable": false
            }
          }
        },
        "typeParameters": [
          {
            "name": "T",
            "default": "any"
          }
        ]
      },
      "ImageBitmapRenderingContext": {
        "properties": {
          "property": {
            "canvas": {
              "exposed": "Window"
            }
          }
        }
      },
      "InstallEvent": {
        "exposed": ""
      },
      "Instance": {
        "constructor": {
          "signature": {
            "0": {
              "param": [
                {
                  "name": "importObject",
                  "type": "Imports"
                }
              ]
            }
          }
        },
        "properties": {
          "property": {
            "exports": {
              "type": "Exports"
            }
          }
        }
      },
      "KeyframeEffect": {
        "constructor": {
          "signature": {
            "0": {
              "param": [
                {
                  "name": "keyframes",
                  "overrideType": "Keyframe[] | PropertyIndexedKeyframes"
                }
              ]
            }
          }
        },
        "methods": {
          "method": {
            "getKeyframes": {
              "signature": {
                "0": {
                  "overrideType": "ComputedKeyframe[]"
                }
              }
            },
            "setKeyframes": {
              "signature": {
                "0": {
                  "param": [
                    {
                      "name": "keyframes",
                      "overrideType": "Keyframe[] | PropertyIndexedKeyframes"
                    }
                  ]
                }
              }
            }
          }
        }
      },
      "LockManager": {
        "methods": {
          "method": {
            "request": {
              "signature": {
                "0": {
                  "overrideType": "Promise<T>",
                  "param": [
                    {
                      "name": "callback",
                      "overrideType": "LockGrantedCallback<T>"
                    }
                  ],
                  "typeParameters": [
                    {
                      "name": "T"
                    }
                  ]
                },
                "1": {
                  "overrideType": "Promise<T>",
                  "param": [
                    {
                      "name": "callback",
                      "overrideType": "LockGrantedCallback<T>"
                    }
                  ],
                  "typeParameters": [
                    {
                      "name": "T"
                    }
                  ]
                }
              },
              "typeParameters": {
                "name": "T"
              }
            }
          }
        }
      },
      "MIDIAccess": {
        "exposed": "Window",
        "transferable": false
      },
      "MIDIConnectionEvent": {
        "exposed": "Window"
      },
      "MIDIInput": {
        "events": {
          "event": [
            {
              "name": "midimessage",
              "type": "MIDIMessageEvent"
            }
          ]
        },
        "exposed": "Window"
      },
      "MIDIInputMap": {
        "exposed": "Window"
      },
      "MIDIMessageEvent": {
        "exposed": "Window"
      },
      "MIDIOutput": {
        "exposed": "Window"
      },
      "MIDIOutputMap": {
        "exposed": "Window"
      },
      "MIDIPort": {
        "events": {
          "event": [
            {
              "name": "statechange",
              "type": "MIDIConnectionEvent"
            }
          ]
        },
        "exposed": "Window"
      },
      "MediaKeySession": {
        "events": {
          "event": [
            {
              "name": "message",
              "type": "MediaKeyMessageEvent"
            }
          ]
        }
      },
      "MediaMetadata": {
        "properties": {
          "property": {
            "artwork": {
              "subtype": {
                "type": "MediaImage"
              }
            }
          }
        }
      },
      "MediaQueryList": {
        "events": {
          "event": [
            {
              "name": "change",
              "type": "MediaQueryListEvent"
            }
          ]
        },
        "methods": {
          "method": {
            "addListener": {
              "deprecated": true,
              "signature": {
                "0": {
                  "param": [
                    {
                      "name": "callback",
                      "overrideType": "(this: MediaQueryList, ev: MediaQueryListEvent) => any"
                    }
                  ]
                }
              }
            },
            "removeListener": {
              "deprecated": true,
              "signature": {
                "0": {
                  "param": [
                    {
                      "name": "callback",
                      "overrideType": "(this: MediaQueryList, ev: MediaQueryListEvent) => any"
                    }
                  ]
                }
              }
            }
          }
        }
      },
      "MediaSource": {
        "exposed": "Window"
      },
      "MessageEvent": {
        "constructor": {
          "signature": {
            "0": {
              "overrideType": "MessageEvent<T>",
              "param": [
                {
                  "name": "eventInitDict",
                  "overrideType": "MessageEventInit<T>"
                }
              ],
              "typeParameters": [
                {
                  "name": "T"
                }
              ]
            }
          }
        },
        "properties": {
          "property": {
            "data": {
              "overrideType": "T"
            }
          }
        },
        "typeParameters": [
          {
            "name": "T",
            "default": "any"
          }
        ]
      },
      "MessagePort": {
        "events": {
          "event": [
            {
              "name": "message",
              "type": "MessageEvent"
            },
            {
              "name": "messageerror",
              "type": "MessageEvent"
            }
          ]
        },
        "methods": {
          "method": {
            "postMessage": {
              "signature": {
                "0": {
                  "param": [
                    {
                      "name": "transfer",
                      "overrideType": "Transferable[]"
                    }
                  ]
                }
              }
            }
          }
        }
      },
      "MouseEvent": {
        "methods": {
          "method": {
            "initMouseEvent": {
              "name": "initMouseEvent",
              "overrideSignatures": [
                "initMouseEvent(typeArg: string, canBubbleArg: boolean, cancelableArg: boolean, viewArg: Window, detailArg: number, screenXArg: number, screenYArg: number, clientXArg: number, clientYArg: number, ctrlKeyArg: boolean, altKeyArg: boolean, shiftKeyArg: boolean, metaKeyArg: boolean, buttonArg: number, relatedTargetArg: EventTarget | null): void"
              ]
            }
          }
        }
      },
      "MutationRecord": {
        "properties": {
          "property": {
            "type": {
              "name": "type",
              "overrideType": "MutationRecordType"
            }
          }
        }
      },
      "NavigationActivation": {
        "exposed": "Window",
        "properties": {
          "property": {
            "entry": {
              "exposed": "Window"
            },
            "from": {
              "exposed": "Window"
            },
            "navigationType": {
              "exposed": "Window"
            }
          }
        }
      },
      "NavigationHistoryEntry": {
        "exposed": "Window",
        "methods": {
          "method": {
            "getState": {
              "exposed": "Window"
            }
          }
        },
        "properties": {
          "property": {
            "id": {
              "exposed": "Window"
            },
            "index": {
              "exposed": "Window"
            },
            "key": {
              "exposed": "Window"
            },
            "ondispose": {
              "exposed": "Window"
            },
            "sameDocument": {
              "exposed": "Window"
            },
            "url": {
              "exposed": "Window"
            }
          }
        }
      },
      "Node": {
        "methods": {
          "method": {
            "appendChild": {
              "signature": {
                "0": {
                  "overrideType": "T",
                  "param": [
                    {
                      "name": "node",
                      "overrideType": "T"
                    }
                  ],
                  "typeParameters": [
                    {
                      "name": "T",
                      "extends": "Node"
                    }
                  ]
                }
              }
            },
            "insertBefore": {
              "signature": {
                "0": {
                  "overrideType": "T",
                  "param": [
                    {
                      "name": "node",
                      "overrideType": "T"
                    }
                  ],
                  "typeParameters": [
                    {
                      "name": "T",
                      "extends": "Node"
                    }
                  ]
                }
              }
            },
            "removeChild": {
              "signature": {
                "0": {
                  "overrideType": "T",
                  "param": [
                    {
                      "name": "child",
                      "overrideType": "T"
                    }
                  ],
                  "typeParameters": [
                    {
                      "name": "T",
                      "extends": "Node"
                    }
                  ]
                }
              }
            },
            "replaceChild": {
              "signature": {
                "0": {
                  "overrideType": "T",
                  "param": [
                    {
                      "name": "child",
                      "overrideType": "T"
                    }
                  ],
                  "typeParameters": [
                    {
                      "name": "T",
                      "extends": "Node"
                    }
                  ]
                }
              }
            }
          }
        },
        "properties": {
          "property": {
            "childNodes": {
              "overrideType": "NodeListOf<ChildNode>"
            },
            "firstChild": {
              "overrideType": "ChildNode"
            },
            "lastChild": {
              "overrideType": "ChildNode"
            },
            "nextSibling": {
              "overrideType": "ChildNode"
            },
            "parentElement": {
              "overrideType": "HTMLElement"
            },
            "parentNode": {
              "overrideType": "ParentNode"
            },
            "previousSibling": {
              "overrideType": "ChildNode"
            }
          }
        }
      },
      "OfflineAudioContext": {
        "events": {
          "event": [
            {
              "name": "complete",
              "type": "OfflineAudioCompletionEvent"
            }
          ]
        }
      },
      "OffscreenCanvas": {
        "methods": {
          "method": {
            "getContext": {
              "additionalSignatures": [
                "getContext(contextId: \"2d\", options?: any): OffscreenCanvasRenderingContext2D | null",
                "getContext(contextId: \"bitmaprenderer\", options?: any): ImageBitmapRenderingContext | null",
                "getContext(contextId: \"webgl\", options?: any): WebGLRenderingContext | null",
                "getContext(contextId: \"webgl2\", options?: any): WebGL2RenderingContext | null"
              ]
            }
          }
        }
      },
      "PannerNode": {
        "methods": {
          "method": {
            "setOrientation": {
              "deprecated": true,
              "name": "setOrientation"
            },
            "setPosition": {
              "deprecated": true,
              "name": "setPosition"
            }
          }
        }
      },
      "PaymentRequest": {
        "properties": {
          "property": {
            "shippingAddress": {
              "type": "PaymentAddress"
            }
          }
        }
      },
      "PaymentResponse": {
        "properties": {
          "property": {
            "shippingAddress": {
              "type": "PaymentAddress"
            }
          }
        }
      },
      "Permissions": {
        "methods": {
          "method": {
            "query": {
              "signature": {
                "0": {
                  "param": [
                    {
                      "name": "permissionDesc",
                      "type": "PermissionDescriptor"
                    }
                  ]
                }
              }
            }
          }
        }
      },
      "PromiseRejectionEvent": {
        "properties": {
          "property": {
            "promise": {
              "overrideType": "Promise<any>"
            }
          }
        }
      },
      "RTCDataChannel": {
        "events": {
          "event": [
            {
              "name": "message",
              "type": "MessageEvent"
            }
          ]
        }
      },
      "RTCIceCandidatePair": {
        "exposed": "Window",
        "noInterfaceObject": true,
        "properties": {
          "property": {
            "local": {
              "readonly": false
            },
            "remote": {
              "readonly": false
            }
          }
        }
      },
      "RTCPeerConnection": {
        "events": {
          "event": [
            {
              "name": "track",
              "type": "RTCTrackEvent"
            },
            {
              "name": "icecandidate",
              "type": "RTCPeerConnectionIceEvent"
            },
            {
              "name": "datachannel",
              "type": "RTCDataChannelEvent"
            },
            {
              "name": "icecandidateerror",
              "type": "RTCPeerConnectionIceErrorEvent"
            }
          ]
        },
        "methods": {
          "method": {
            "addIceCandidate": {
              "signature": {
                "0": {
                  "param": [
                    {
                      "name": "candidate",
                      "nullable": true
                    }
                  ]
                },
                "1": {
                  "deprecated": true,
                  "param": [
                    {
                      "name": "candidate",
                      "nullable": true
                    }
                  ]
                }
              }
            },
            "createAnswer": {
              "signature": {
                "1": {
                  "deprecated": true
                }
              }
            },
            "createOffer": {
              "signature": {
                "1": {
                  "deprecated": true
                }
              }
            },
            "setLocalDescription": {
              "signature": {
                "1": {
                  "deprecated": true
                }
              }
            },
            "setRemoteDescription": {
              "signature": {
                "1": {
                  "deprecated": true
                }
              }
            }
          }
        }
      },
      "ReadableStream": {
        "constructor": {
          "force-references": [
            {
              "type": "UnderlyingSource"
            },
            {
              "type": "UnderlyingByteSource"
            },
            {
              "type": "UnderlyingDefaultSource"
            },
            {
              "type": "QueuingStrategy"
            }
          ],
          "signature": {
            "0": {
              "overrideType": "ReadableStream<Uint8Array>",
              "param": [
                {
                  "name": "underlyingSource",
                  "optional": false,
                  "type": "UnderlyingByteSource"
                },
                {
                  "name": "strategy",
                  "overrideType": "{ highWaterMark?: number }"
                }
              ]
            },
            "1": {
              "overrideType": "ReadableStream<R>",
              "param": [
                {
                  "name": "underlyingSource",
                  "optional": false,
                  "overrideType": "UnderlyingDefaultSource<R>"
                },
                {
                  "name": "strategy",
                  "optional": true,
                  "overrideType": "QueuingStrategy<R>"
                }
              ],
              "typeParameters": [
                {
                  "name": "R",
                  "default": "any"
                }
              ]
            },
            "2": {
              "overrideType": "ReadableStream<R>",
              "param": [
                {
                  "name": "underlyingSource",
                  "optional": true,
                  "overrideType": "UnderlyingSource<R>"
                },
                {
                  "name": "strategy",
                  "optional": true,
                  "overrideType": "QueuingStrategy<R>"
                }
              ],
              "typeParameters": [
                {
                  "name": "R",
                  "default": "any"
                }
              ]
            }
          }
        },
        "iterator": {
          "type": {
            "0": {
              "overrideType": "R"
            }
          }
        },
        "methods": {
          "method": {
            "getReader": {
              "additionalSignatures": [
                "getReader(options: { mode: \"byob\" }): ReadableStreamBYOBReader",
                "getReader(): ReadableStreamDefaultReader<R>"
              ],
              "signature": {
                "0": {
                  "overrideType": "ReadableStreamReader<R>"
                }
              }
            },
            "pipeThrough": {
              "signature": {
                "0": {
                  "overrideType": "ReadableStream<T>",
                  "param": [
                    {
                      "name": "transform",
                      "overrideType": "ReadableWritablePair<T, R>"
                    }
                  ],
                  "typeParameters": [
                    {
                      "name": "T"
                    }
                  ]
                }
              }
            },
            "pipeTo": {
              "signature": {
                "0": {
                  "param": [
                    {
                      "name": "destination",
                      "overrideType": "WritableStream<R>"
                    }
                  ]
                }
              }
            },
            "tee": {
              "signature": {
                "0": {
                  "overrideType": "[ReadableStream<R>, ReadableStream<R>]"
                }
              }
            }
          }
        },
        "typeParameters": [
          {
            "name": "R",
            "default": "any"
          }
        ]
      },
      "ReadableStreamBYOBReader": {
        "constructor": {
          "signature": {
            "0": {
              "param": [
                {
                  "name": "stream",
                  "overrideType": "ReadableStream<Uint8Array>"
                }
              ]
            }
          }
        },
        "methods": {
          "method": {
            "read": {
              "signature": {
                "0": {
                  "overrideType": "Promise<ReadableStreamReadResult<T>>",
                  "param": [
                    {
                      "name": "view",
                      "overrideType": "T"
                    }
                  ],
                  "typeParameters": [
                    {
                      "name": "T",
                      "extends": "ArrayBufferView"
                    }
                  ]
                }
              }
            }
          }
        }
      },
      "ReadableStreamDefaultController": {
        "methods": {
          "method": {
            "enqueue": {
              "signature": {
                "0": {
                  "param": [
                    {
                      "name": "chunk",
                      "overrideType": "R"
                    }
                  ]
                }
              }
            }
          }
        },
        "typeParameters": [
          {
            "name": "R",
            "default": "any"
          }
        ]
      },
      "ReadableStreamDefaultReader": {
        "constructor": {
          "signature": {
            "0": {
              "overrideType": "ReadableStreamDefaultReader<R>",
              "param": [
                {
                  "name": "stream",
                  "overrideType": "ReadableStream<R>"
                }
              ],
              "typeParameters": [
                {
                  "name": "R",
                  "default": "any"
                }
              ]
            }
          }
        },
        "methods": {
          "method": {
            "read": {
              "signature": {
                "0": {
                  "overrideType": "Promise<ReadableStreamReadResult<R>>"
                }
              }
            }
          }
        },
        "typeParameters": [
          {
            "name": "R",
            "default": "any"
          }
        ]
      },
      "SVGElement": {
        "properties": {
          "property": {
            "className": {
              "deprecated": true,
              "name": "className",
              "type": "any"
            }
          }
        }
      },
      "SVGSVGElement": {
        "methods": {
          "method": {
            "getEnclosureList": {
              "signature": {
                "0": {
                  "overrideType": "NodeListOf<SVGCircleElement | SVGEllipseElement | SVGImageElement | SVGLineElement | SVGPathElement | SVGPolygonElement | SVGPolylineElement | SVGRectElement | SVGTextElement | SVGUseElement>"
                }
              }
            },
            "getIntersectionList": {
              "signature": {
                "0": {
                  "overrideType": "NodeListOf<SVGCircleElement | SVGEllipseElement | SVGImageElement | SVGLineElement | SVGPathElement | SVGPolygonElement | SVGPolylineElement | SVGRectElement | SVGTextElement | SVGUseElement>"
                }
              }
            }
          }
        }
      },
      "SVGSymbolElement": {
        "extends": "SVGElement"
      },
      "ScriptProcessorNode": {
        "events": {
          "event": [
            {
              "name": "audioprocess",
              "type": "AudioProcessingEvent"
            }
          ]
        }
      },
      "ServiceWorker": {
        "methods": {
          "method": {
            "postMessage": {
              "signature": {
                "0": {
                  "param": [
                    {
                      "name": "transfer",
                      "overrideType": "Transferable[]"
                    }
                  ]
                }
              }
            }
          }
        }
      },
      "ServiceWorkerContainer": {
        "events": {
          "event": [
            {
              "name": "message",
              "type": "MessageEvent"
            },
            {
              "name": "messageerror",
              "type": "MessageEvent"
            }
          ]
        },
        "methods": {
          "method": {
            "getRegistration": {
              "signature": {
                "0": {
                  "overrideType": "Promise<ServiceWorkerRegistration | undefined>"
                }
              }
            }
          }
        }
      },
      "ServiceWorkerGlobalScope": {
        "events": {
          "event": [
            {
              "name": "install",
              "type": "ExtendableEvent"
            },
            {
              "name": "activate",
              "type": "ExtendableEvent"
            },
            {
              "name": "fetch",
              "type": "FetchEvent"
            },
            {
              "name": "message",
              "type": "ExtendableMessageEvent"
            },
            {
              "name": "messageerror",
              "type": "MessageEvent"
            },
            {
              "name": "notificationclick",
              "type": "NotificationEvent"
            },
            {
              "name": "notificationclose",
              "type": "NotificationEvent"
            },
            {
              "name": "push",
              "type": "PushEvent"
            }
          ],
          "methods": {
            "method": {
              "waitUntil": {
                "signature": {
                  "0": {
                    "param": [
                      {
                        "name": "f",
                        "overrideType": "Promise<any>"
                      }
                    ]
                  }
                }
              }
            }
          }
        }
      },
      "SourceBuffer": {
        "exposed": "Window"
      },
      "SourceBufferList": {
        "exposed": "Window"
      },
      "Storage": {
        "overrideIndexSignatures": [
          "[name: string]: any"
        ]
      },
      "StylePropertyMapReadOnly": {
        "methods": {
          "method": {
            "get": {
              "signature": {
                "0": {
                  "overrideType": "undefined | CSSStyleValue"
                }
              }
            }
          }
        }
      },
      "SubtleCrypto": {
        "methods": {
          "method": {
            "decrypt": {
              "signature": {
                "0": {
                  "param": [
                    {
                      "name": "algorithm",
                      "additionalTypes": [
                        "RsaOaepParams",
                        "AesCtrParams",
                        "AesCbcParams",
                        "AesGcmParams"
                      ]
                    }
                  ]
                }
              }
            },
            "deriveBits": {
              "signature": {
                "0": {
                  "param": [
                    {
                      "name": "algorithm",
                      "additionalTypes": [
                        "EcdhKeyDeriveParams",
                        "HkdfParams",
                        "Pbkdf2Params"
                      ]
                    }
                  ]
                }
              }
            },
            "deriveKey": {
              "signature": {
                "0": {
                  "overrideType": "Promise<CryptoKey>",
                  "param": [
                    {
                      "name": "algorithm",
                      "additionalTypes": [
                        "EcdhKeyDeriveParams",
                        "HkdfParams",
                        "Pbkdf2Params"
                      ]
                    },
                    {
                      "name": "derivedKeyType",
                      "additionalTypes": [
                        "AesDerivedKeyParams",
                        "HmacImportParams",
                        "HkdfParams",
                        "Pbkdf2Params"
                      ]
                    }
                  ]
                }
              }
            },
            "digest": {
              "name": "digest",
              "signature": {
                "0": {
                  "overrideType": "Promise<ArrayBuffer>"
                }
              }
            },
            "encrypt": {
              "signature": {
                "0": {
                  "param": [
                    {
                      "name": "algorithm",
                      "additionalTypes": [
                        "RsaOaepParams",
                        "AesCtrParams",
                        "AesCbcParams",
                        "AesGcmParams"
                      ]
                    }
                  ]
                }
              }
            },
            "exportKey": {
              "additionalSignatures": [
                "exportKey(format: \"jwk\", key: CryptoKey): Promise<JsonWebKey>",
                "exportKey(format: Exclude<KeyFormat, \"jwk\">, key: CryptoKey): Promise<ArrayBuffer>"
              ],
              "signature": {
                "0": {
                  "overrideType": "Promise<ArrayBuffer | JsonWebKey>",
                  "param": [
                    {
                      "name": "format",
                      "overrideType": "KeyFormat"
                    }
                  ]
                }
              }
            },
            "generateKey": {
              "additionalSignatures": [
                "generateKey(algorithm: \"Ed25519\" | { name: \"Ed25519\" }, extractable: boolean, keyUsages: ReadonlyArray<\"sign\" | \"verify\">): Promise<CryptoKeyPair>",
                "generateKey(algorithm: RsaHashedKeyGenParams | EcKeyGenParams, extractable: boolean, keyUsages: ReadonlyArray<KeyUsage>): Promise<CryptoKeyPair>",
                "generateKey(algorithm: AesKeyGenParams | HmacKeyGenParams | Pbkdf2Params, extractable: boolean, keyUsages: ReadonlyArray<KeyUsage>): Promise<CryptoKey>"
              ],
              "name": "generateKey",
              "signature": {
                "0": {
                  "overrideType": "Promise<CryptoKeyPair | CryptoKey>"
                }
              }
            },
            "importKey": {
              "additionalSignatures": [
                "importKey(format: \"jwk\", keyData: JsonWebKey, algorithm: AlgorithmIdentifier | RsaHashedImportParams | EcKeyImportParams | HmacImportParams | AesKeyAlgorithm, extractable: boolean, keyUsages: ReadonlyArray<KeyUsage>): Promise<CryptoKey>"
              ],
              "force-references": [
                {
                  "type": "JsonWebKey"
                }
              ],
              "name": "importKey",
              "signature": {
                "0": {
                  "param": [
                    {
                      "name": "format",
                      "overrideType": "Exclude<KeyFormat, \"jwk\">"
                    },
                    {
                      "name": "keyData",
                      "type": "BufferSource"
                    },
                    {
                      "name": "algorithm",
                      "additionalTypes": [
                        "RsaHashedImportParams",
                        "EcKeyImportParams",
                        "HmacImportParams",
                        "AesKeyAlgorithm"
                      ]
                    }
                  ]
                }
              }
            },
            "sign": {
              "signature": {
                "0": {
                  "overrideType": "Promise<ArrayBuffer>",
                  "param": [
                    {
                      "name": "algorithm",
                      "additionalTypes": [
                        "RsaPssParams",
                        "EcdsaParams"
                      ]
                    }
                  ]
                }
              }
            },
            "unwrapKey": {
              "signature": {
                "0": {
                  "param": [
                    {
                      "name": "unwrapAlgorithm",
                      "additionalTypes": [
                        "RsaOaepParams",
                        "AesCtrParams",
                        "AesCbcParams",
                        "AesGcmParams"
                      ]
                    },
                    {
                      "name": "unwrappedKeyAlgorithm",
                      "additionalTypes": [
                        "RsaHashedImportParams",
                        "EcKeyImportParams",
                        "HmacImportParams",
                        "AesKeyAlgorithm"
                      ]
                    }
                  ]
                }
              }
            },
            "verify": {
              "signature": {
                "0": {
                  "overrideType": "Promise<boolean>",
                  "param": [
                    {
                      "name": "algorithm",
                      "additionalTypes": [
                        "RsaPssParams",
                        "EcdsaParams"
                      ]
                    }
                  ]
                }
              }
            },
            "wrapKey": {
              "signature": {
                "0": {
                  "overrideType": "Promise<ArrayBuffer>",
                  "param": [
                    {
                      "name": "wrapAlgorithm",
                      "additionalTypes": [
                        "RsaOaepParams",
                        "AesCtrParams",
                        "AesCbcParams",
                        "AesGcmParams"
                      ]
                    }
                  ]
                }
              }
            }
          }
        }
      },
      "TextDecoderStream": {
        "properties": {
          "property": {
            "readable": {
              "name": "readable",
              "overrideType": "ReadableStream<string>",
              "readonly": true
            },
            "writable": {
              "name": "writable",
              "overrideType": "WritableStream<BufferSource>",
              "readonly": true
            }
          }
        }
      },
      "TextEncoderStream": {
        "properties": {
          "property": {
            "readable": {
              "name": "readable",
              "overrideType": "ReadableStream<Uint8Array>",
              "readonly": true
            },
            "writable": {
              "name": "writable",
              "overrideType": "WritableStream<string>",
              "readonly": true
            }
          }
        }
      },
      "TransformStream": {
        "constructor": {
          "force-references": [
            {
              "type": "Transformer"
            },
            {
              "type": "QueuingStrategy"
            }
          ],
          "signature": {
            "0": {
              "overrideType": "TransformStream<I, O>",
              "param": [
                {
                  "name": "transformer",
                  "overrideType": "Transformer<I, O>"
                },
                {
                  "name": "writableStrategy",
                  "overrideType": "QueuingStrategy<I>"
                },
                {
                  "name": "readableStrategy",
                  "overrideType": "QueuingStrategy<O>"
                }
              ],
              "typeParameters": [
                {
                  "name": "I",
                  "default": "any"
                },
                {
                  "name": "O",
                  "default": "any"
                }
              ]
            }
          }
        },
        "properties": {
          "property": {
            "readable": {
              "overrideType": "ReadableStream<O>"
            },
            "writable": {
              "overrideType": "WritableStream<I>"
            }
          }
        },
        "typeParameters": [
          {
            "name": "I",
            "default": "any"
          },
          {
            "name": "O",
            "default": "any"
          }
        ]
      },
      "TransformStreamDefaultController": {
        "methods": {
          "method": {
            "enqueue": {
              "signature": {
                "0": {
                  "param": [
                    {
                      "name": "chunk",
                      "overrideType": "O"
                    }
                  ]
                }
              }
            }
          }
        },
        "typeParameters": [
          {
            "name": "O",
            "default": "any"
          }
        ]
      },
      "URL": {
        "constructor": {
          "signature": {
            "0": {
              "param": [
                {
                  "name": "base",
                  "additionalTypes": [
                    "URL"
                  ]
                }
              ]
            }
          }
        },
        "methods": {
          "method": {
            "canParse": {
              "signature": {
                "0": {
                  "param": [
                    {
                      "name": "base",
                      "additionalTypes": [
                        "URL"
                      ]
                    }
                  ]
                }
              }
            },
            "parse": {
              "signature": {
                "0": {
                  "param": [
                    {
                      "name": "base",
                      "additionalTypes": [
                        "URL"
                      ]
                    }
                  ]
                }
              }
            }
          }
        }
      },
      "WebSocket": {
        "events": {
          "event": [
            {
              "name": "message",
              "type": "MessageEvent"
            }
          ]
        },
        "methods": {
          "method": {
            "send": {
              "name": "send",
              "overrideSignatures": [
                "send(data: string | ArrayBufferLike | Blob | ArrayBufferView): void"
              ]
            }
          }
        }
      },
      "WebTransport": {
        "methods": {
          "method": {
            "createUnidirectionalStream": {
              "signature": {
                "0": {
                  "subtype": {
                    "type": "WritableStream"
                  }
                }
              }
            }
          }
        }
      },
      "WebTransportBidirectionalStream": {
        "properties": {
          "property": {
            "readable": {
              "type": "ReadableStream"
            },
            "writable": {
              "type": "WritableStream"
            }
          }
        }
      },
      "WebTransportDatagramDuplexStream": {
        "properties": {
          "property": {
            "writable": {
              "type": "WritableStream"
            }
          }
        }
      },
      "Window": {
        "methods": {
          "method": {
            "alert": {
              "overrideSignatures": [
                "alert(message?: any): void"
              ]
            },
            "postMessage": {
              "signature": {
                "0": {
                  "param": [
                    {
                      "name": "transfer",
                      "overrideType": "Transferable[]"
                    }
                  ]
                }
              }
            }
          }
        },
        "overrideIndexSignatures": [],
        "properties": {
          "property": {
            "event": {
              "deprecated": true
            },
            "location": {
              "readonly": false
            },
            "onorientationchange": {
              "deprecated": true
            },
            "pageXOffset": {
              "deprecated": false
            },
            "pageYOffset": {
              "deprecated": false
            },
            "parent": {
              "nullable": false
            },
            "self": {
              "overrideType": "Window & typeof globalThis"
            },
            "window": {
              "overrideType": "Window & typeof globalThis"
            }
          }
        }
      },
      "Worker": {
        "methods": {
          "method": {
            "postMessage": {
              "signature": {
                "0": {
                  "param": [
                    {
                      "name": "transfer",
                      "overrideType": "Transferable[]"
                    }
                  ]
                }
              }
            }
          }
        }
      },
      "WorkerGlobalScope": {
        "events": {
          "event": [
            {
              "name": "error",
              "type": "ErrorEvent"
            }
          ]
        },
        "properties": {
          "property": {
            "self": {
              "overrideType": "WorkerGlobalScope & typeof globalThis"
            }
          }
        }
      },
      "WritableStream": {
        "constructor": {
          "force-references": [
            {
              "type": "UnderlyingSink"
            },
            {
              "type": "QueuingStrategy"
            }
          ],
          "signature": {
            "0": {
              "overrideType": "WritableStream<W>",
              "param": [
                {
                  "name": "underlyingSink",
                  "overrideType": "UnderlyingSink<W>"
                },
                {
                  "name": "strategy",
                  "overrideType": "QueuingStrategy<W>"
                }
              ],
              "typeParameters": [
                {
                  "name": "W",
                  "default": "any"
                }
              ]
            }
          }
        },
        "methods": {
          "method": {
            "getWriter": {
              "signature": {
                "0": {
                  "overrideType": "WritableStreamDefaultWriter<W>"
                }
              }
            }
          }
        },
        "typeParameters": [
          {
            "name": "W",
            "default": "any"
          }
        ]
      },
      "WritableStreamDefaultWriter": {
        "constructor": {
          "signature": {
            "0": {
              "overrideType": "WritableStreamDefaultWriter<W>",
              "param": [
                {
                  "name": "stream",
                  "overrideType": "WritableStream<W>"
                }
              ],
              "typeParameters": [
                {
                  "name": "W",
                  "default": "any"
                }
              ]
            }
          }
        },
        "methods": {
          "method": {
            "write": {
              "signature": {
                "0": {
                  "param": [
                    {
                      "name": "chunk",
                      "overrideType": "W"
                    }
                  ]
                }
              }
            }
          }
        },
        "typeParameters": [
          {
            "name": "W",
            "default": "any"
          }
        ]
      },
      "XMLHttpRequestEventTarget": {
        "events": {
          "event": [
            {
              "name": "loadstart",
              "type": "ProgressEvent"
            },
            {
              "name": "progress",
              "type": "ProgressEvent"
            },
            {
              "name": "abort",
              "type": "ProgressEvent"
            },
            {
              "name": "error",
              "type": "ProgressEvent"
            },
            {
              "name": "load",
              "type": "ProgressEvent"
            },
            {
              "name": "timeout",
              "type": "ProgressEvent"
            },
            {
              "name": "loadend",
              "type": "ProgressEvent"
            }
          ]
        },
        "properties": {
          "property": {
            "onabort": {
              "name": "onabort",
              "overrideType": "((this: XMLHttpRequest, ev: ProgressEvent) => any) | null"
            },
            "onerror": {
              "name": "onerror",
              "overrideType": "((this: XMLHttpRequest, ev: ProgressEvent) => any) | null"
            },
            "onload": {
              "name": "onload",
              "overrideType": "((this: XMLHttpRequest, ev: ProgressEvent) => any) | null"
            },
            "onloadend": {
              "name": "onloadend",
              "overrideType": "((this: XMLHttpRequest, ev: ProgressEvent) => any) | null"
            },
            "onloadstart": {
              "name": "onloadstart",
              "overrideType": "((this: XMLHttpRequest, ev: ProgressEvent) => any) | null"
            },
            "onprogress": {
              "name": "onprogress",
              "overrideType": "((this: XMLHttpRequest, ev: ProgressEvent) => any) | null"
            },
            "ontimeout": {
              "name": "ontimeout",
              "overrideType": "((this: XMLHttpRequest, ev: ProgressEvent) => any) | null"
            }
          }
        }
      }
    }
  },
  "mixins": {
    "mixin": {
      "Animatable": {
        "methods": {
          "method": {
            "animate": {
              "name": "animate",
              "signature": {
                "0": {
                  "param": [
                    {
                      "name": "keyframes",
                      "overrideType": "Keyframe[] | PropertyIndexedKeyframes"
                    }
                  ]
                }
              }
            }
          }
        }
      },
      "Body": {
        "properties": {
          "property": {
            "body": {
              "overrideType": "ReadableStream<Uint8Array>"
            }
          }
        }
      },
      "CanvasCompositing": {
        "properties": {
          "property": {
            "globalCompositeOperation": {
              "type": "GlobalCompositeOperation"
            }
          }
        }
      },
      "ChildNode": {
        "extends": "Node"
      },
      "GlobalEventHandlers": {
        "events": {
          "event": [
            {
              "name": "animationcancel",
              "type": "AnimationEvent"
            },
            {
              "name": "animationend",
              "type": "AnimationEvent"
            },
            {
              "name": "animationiteration",
              "type": "AnimationEvent"
            },
            {
              "name": "animationstart",
              "type": "AnimationEvent"
            },
            {
              "name": "auxclick",
              "type": "PointerEvent"
            },
            {
              "name": "cut",
              "type": "ClipboardEvent"
            },
            {
              "name": "copy",
              "type": "ClipboardEvent"
            },
            {
              "name": "contextmenu",
              "type": "PointerEvent"
            },
            {
              "name": "paste",
              "type": "ClipboardEvent"
            },
            {
              "name": "gotpointercapture",
              "type": "PointerEvent"
            },
            {
              "name": "lostpointercapture",
              "type": "PointerEvent"
            },
            {
              "name": "pointercancel",
              "type": "PointerEvent"
            },
            {
              "name": "pointerdown",
              "type": "PointerEvent"
            },
            {
              "name": "pointerenter",
              "type": "PointerEvent"
            },
            {
              "name": "pointerleave",
              "type": "PointerEvent"
            },
            {
              "name": "pointermove",
              "type": "PointerEvent"
            },
            {
              "name": "pointerout",
              "type": "PointerEvent"
            },
            {
              "name": "pointerover",
              "type": "PointerEvent"
            },
            {
              "name": "pointerup",
              "type": "PointerEvent"
            },
            {
              "name": "touchcancel",
              "type": "TouchEvent"
            },
            {
              "name": "touchend",
              "type": "TouchEvent"
            },
            {
              "name": "touchmove",
              "type": "TouchEvent"
            },
            {
              "name": "touchstart",
              "type": "TouchEvent"
            },
            {
              "name": "transitionrun",
              "type": "TransitionEvent"
            },
            {
              "name": "transitionstart",
              "type": "TransitionEvent"
            },
            {
              "name": "transitionend",
              "type": "TransitionEvent"
            },
            {
              "name": "transitioncancel",
              "type": "TransitionEvent"
            }
          ]
        },
        "properties": {
          "property": {
            "onerror": {
              "overrideType": "OnErrorEventHandler"
            },
            "ontouchcancel": {
              "optional": true
            },
            "ontouchend": {
              "optional": true
            },
            "ontouchmove": {
              "optional": true
            },
            "ontouchstart": {
              "optional": true
            }
          }
        }
      },
      "HTMLOrSVGElement": {
        "properties": {
          "property": {
            "nonce": {
              "name": "nonce?"
            }
          }
        }
      },
      "MessageEventTarget": {
        "events": {
          "event": [
            {
              "name": "message",
              "type": "MessageEvent"
            },
            {
              "name": "messageerror",
              "type": "MessageEvent"
            }
          ]
        },
        "overrideThis": "T",
        "typeParameters": [
          {
            "name": "T"
          }
        ]
      },
      "ParentNode": {
        "extends": "Node"
      },
      "WebGLRenderingContextBase": {
        "methods": {
          "method": {
            "getExtension": {
              "additionalSignatures": [
                "getExtension(extensionName: \"ANGLE_instanced_arrays\"): ANGLE_instanced_arrays | null",
                "getExtension(extensionName: \"EXT_blend_minmax\"): EXT_blend_minmax | null",
                "getExtension(extensionName: \"EXT_color_buffer_float\"): EXT_color_buffer_float | null",
                "getExtension(extensionName: \"EXT_color_buffer_half_float\"): EXT_color_buffer_half_float | null",
                "getExtension(extensionName: \"EXT_float_blend\"): EXT_float_blend | null",
                "getExtension(extensionName: \"EXT_frag_depth\"): EXT_frag_depth | null",
                "getExtension(extensionName: \"EXT_sRGB\"): EXT_sRGB | null",
                "getExtension(extensionName: \"EXT_shader_texture_lod\"): EXT_shader_texture_lod | null",
                "getExtension(extensionName: \"EXT_texture_compression_bptc\"): EXT_texture_compression_bptc | null",
                "getExtension(extensionName: \"EXT_texture_compression_rgtc\"): EXT_texture_compression_rgtc | null",
                "getExtension(extensionName: \"EXT_texture_filter_anisotropic\"): EXT_texture_filter_anisotropic | null",
                "getExtension(extensionName: \"KHR_parallel_shader_compile\"): KHR_parallel_shader_compile | null",
                "getExtension(extensionName: \"OES_element_index_uint\"): OES_element_index_uint | null",
                "getExtension(extensionName: \"OES_fbo_render_mipmap\"): OES_fbo_render_mipmap | null",
                "getExtension(extensionName: \"OES_standard_derivatives\"): OES_standard_derivatives | null",
                "getExtension(extensionName: \"OES_texture_float\"): OES_texture_float | null",
                "getExtension(extensionName: \"OES_texture_float_linear\"): OES_texture_float_linear | null",
                "getExtension(extensionName: \"OES_texture_half_float\"): OES_texture_half_float | null",
                "getExtension(extensionName: \"OES_texture_half_float_linear\"): OES_texture_half_float_linear | null",
                "getExtension(extensionName: \"OES_vertex_array_object\"): OES_vertex_array_object | null",
                "getExtension(extensionName: \"OVR_multiview2\"): OVR_multiview2 | null",
                "getExtension(extensionName: \"WEBGL_color_buffer_float\"): WEBGL_color_buffer_float | null",
                "getExtension(extensionName: \"WEBGL_compressed_texture_astc\"): WEBGL_compressed_texture_astc | null",
                "getExtension(extensionName: \"WEBGL_compressed_texture_etc\"): WEBGL_compressed_texture_etc | null",
                "getExtension(extensionName: \"WEBGL_compressed_texture_etc1\"): WEBGL_compressed_texture_etc1 | null",
                "getExtension(extensionName: \"WEBGL_compressed_texture_pvrtc\"): WEBGL_compressed_texture_pvrtc | null",
                "getExtension(extensionName: \"WEBGL_compressed_texture_s3tc\"): WEBGL_compressed_texture_s3tc | null",
                "getExtension(extensionName: \"WEBGL_compressed_texture_s3tc_srgb\"): WEBGL_compressed_texture_s3tc_srgb | null",
                "getExtension(extensionName: \"WEBGL_debug_renderer_info\"): WEBGL_debug_renderer_info | null",
                "getExtension(extensionName: \"WEBGL_debug_shaders\"): WEBGL_debug_shaders | null",
                "getExtension(extensionName: \"WEBGL_depth_texture\"): WEBGL_depth_texture | null",
                "getExtension(extensionName: \"WEBGL_draw_buffers\"): WEBGL_draw_buffers | null",
                "getExtension(extensionName: \"WEBGL_lose_context\"): WEBGL_lose_context | null",
                "getExtension(extensionName: \"WEBGL_multi_draw\"): WEBGL_multi_draw | null"
              ],
              "name": "getExtension"
            },
            "pixelStorei": {
              "name": "pixelStorei",
              "signature": {
                "0": {
                  "param": [
                    {
                      "name": "param",
                      "additionalTypes": [
                        "GLboolean"
                      ]
                    }
                  ]
                }
              }
            }
          }
        }
      },
      "WindowOrWorkerGlobalScope": {
        "methods": {
          "method": {
            "clearInterval": {
              "signature": {
                "0": {
                  "param": [
                    {
                      "name": "id",
                      "optional": false,
                      "additionalTypes": [
                        "undefined"
                      ]
                    }
                  ]
                }
              }
            },
            "clearTimeout": {
              "signature": {
                "0": {
                  "param": [
                    {
                      "name": "id",
                      "optional": false,
                      "additionalTypes": [
                        "undefined"
                      ]
                    }
                  ]
                }
              }
            },
            "structuredClone": {
              "signature": {
                "0": {
                  "overrideType": "T",
                  "param": [
                    {
                      "name": "value",
                      "overrideType": "T"
                    }
                  ],
                  "typeParameters": [
                    {
                      "name": "T",
                      "default": "any"
                    }
                  ]
                }
              }
            }
          }
        }
      }
    }
  },
  "namespaces": [
    {
      "name": "console",
      "methods": {
        "method": {
          "timeStamp": {
            "name": "timeStamp",
            "overrideSignatures": [
              "timeStamp(label?: string): void"
            ]
          }
        }
      }
    },
    {
      "name": "WebAssembly",
      "methods": {
        "method": {
          "instantiate": {
            "signature": {
              "0": {
                "param": [
                  {
                    "name": "importObject",
                    "type": "Imports"
                  }
                ]
              },
              "1": {
                "param": [
                  {
                    "name": "importObject",
                    "type": "Imports"
                  }
                ]
              }
            }
          },
          "instantiateStreaming": {
            "signature": {
              "0": {
                "param": [
                  {
                    "name": "importObject",
                    "type": "Imports"
                  }
                ]
              }
            }
          }
        }
      }
    },
    {
      "name": "CSS",
      "methods": {
        "method": {
          "in": {
            "exposed": ""
          }
        }
      }
    }
  ],
  "typedefs": {
    "typedef": [
      {
        "overrideType": "ReadableStreamDefaultController<T> | ReadableByteStreamController",
        "name": "ReadableStreamController",
        "typeParameters": [
          {
            "name": "T"
          }
        ]
      },
      {
        "name": "ReadableStreamReader",
        "typeParameters": [
          {
            "name": "T"
          }
        ],
        "type": [
          {
            "type": "ReadableStreamDefaultReader"
          },
          {
            "type": "ReadableStreamBYOBReader"
          }
        ],
        "overrideType": "ReadableStreamDefaultReader<T> | ReadableStreamBYOBReader"
      },
      {
        "name": "AllowSharedBufferSource",
        "overrideType": "ArrayBuffer | ArrayBufferView"
      }
    ]
  }
}