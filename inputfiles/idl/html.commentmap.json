{
    "dir": "Returns the html element's dir attribute's value, if any.\n\nCan be set, to either \"ltr\", \"rtl\", or \"auto\" to replace the html element's dir attribute's value.\n\nIf there is no html element, returns the empty string and ignores new values.",
    "dataset": "Returns a DOMStringMap object for the element's data-* attributes.\n\nHyphenated names become camel-cased. For example, data-foo-bar=\"\" becomes element.dataset.fooBar.",
    "htmlhyperlinkelementutils-href": "Returns the hyperlink's URL.\n\nCan be set, to change the URL.",
    "htmlhyperlinkelementutils-origin": "Returns the hyperlink's URL's origin.",
    "htmlhyperlinkelementutils-protocol": "Returns the hyperlink's URL's scheme.\n\nCan be set, to change the URL's scheme.",
    "htmlhyperlinkelementutils-username": "Returns the hyperlink's URL's username.\n\nCan be set, to change the URL's username.",
    "htmlhyperlinkelementutils-password": "Returns the hyperlink's URL's password.\n\nCan be set, to change the URL's password.",
    "htmlhyperlinkelementutils-host": "Returns the hyperlink's URL's host and port (if different from the default port for the scheme).\n\nCan be set, to change the URL's host and port.",
    "htmlhyperlinkelementutils-hostname": "Returns the hyperlink's URL's host.\n\nCan be set, to change the URL's host.",
    "htmlhyperlinkelementutils-port": "Returns the hyperlink's URL's port.\n\nCan be set, to change the URL's port.",
    "htmlhyperlinkelementutils-pathname": "Returns the hyperlink's URL's path.\n\nCan be set, to change the URL's path.",
    "htmlhyperlinkelementutils-search": "Returns the hyperlink's URL's query (includes leading \"?\" if non-empty).\n\nCan be set, to change the URL's query (ignores leading \"?\").",
    "htmlhyperlinkelementutils-hash": "Returns the hyperlink's URL's fragment (includes leading \"#\" if non-empty).\n\nCan be set, to change the URL's fragment (ignores leading \"#\").",
    "image": "Returns a new img element, with the width and height attributes set to the values passed in the relevant arguments, if applicable.",
    "audio": "Returns a new audio element, with the src attribute set to the value passed in the argument, if applicable.",
    "option": "Returns a new option element.\n\nThe text argument sets the contents of the element.\n\nThe value argument sets the value attribute.\n\nThe defaultSelected argument sets the selected attribute.\n\nThe selected argument sets whether or not the element is selected. If it is omitted, even if the defaultSelected argument is true, the element is not selected.",
    "textarea": "Selects everything in the text control.",
    "click": "Acts as if the element was clicked.",
    "documentorshadowroot-activeelement": "Returns the deepest element in the document through which or to which key events are being routed. This is, roughly speaking, the focused element in the document.\n\nFor the purposes of this API, when a child browsing context is focused, its container is focused in the parent browsing context. For example, if the user moves the focus to a text control in an iframe, the iframe is the element returned by the activeElement API in the iframe's node document.\n\nSimilarly, when the focused element is in a different node tree than documentOrShadowRoot, the element returned will be the host that's located in the same node tree as documentOrShadowRoot if documentOrShadowRoot is a shadow-including inclusive ancestor of the focused element, and null if not.",
    "plugin-name": "Returns the plugin's name.",
    "plugin-description": "Returns the plugin's description.",
    "plugin-filename": "Returns the plugin library's filename, if applicable on the current platform.",
    "plugin-length": "Returns the number of MIME types, represented by MimeType objects, supported by the plugin.",
    "plugin-item": "Returns the specified MimeType object.",
    "mimetype-type": "Returns the MIME type.",
    "mimetype-description": "Returns the MIME type's description.",
    "mimetype-suffixes": "Returns the MIME type's typical file extensions, in a comma-separated list.",
    "mimetype-enabledplugin": "Returns the Plugin object that implements this MIME type.",
    "worker": "Returns a new Worker object. scriptURL will be fetched and executed in the background, creating a new global environment for which worker represents the communication channel. options can be used to define the name of that global environment via the name option, primarily for debugging purposes. It can also ensure this new global environment supports JavaScript modules (specify type: \"module\"), and if that is specified, can also be used to specify how scriptURL is fetched through the credentials option."
}